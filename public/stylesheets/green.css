/*********************/
/* css for rmsweb v2 */
/*********************/
* {
	margin:0px;
	padding:0px;
	color:#FFF;
	font-family:"trebuchet ms", verdana, sans-serif;
	font-size:10pt;
	background:transparent;
}

body {
	width:1024px;
	height:768px;
	margin:10px;
	border:5px solid orange;
	border-radius:15px;
	-moz-border-radius:15px;
	background-image: url('../images/fibre_green.jpg');
}

/***********************************/
/* rules for the header and footer */
/***********************************/
header#page_header p {
	width:90%;
	margin-left:auto;
	margin-right:auto;
}

header#page_header nav ul, #page_footer nav ul {
	display: block;
	list-style: none;
	width:100%;
	text-align: center;
	padding: 0;
} 

header#page_header nav ul li, footer#page_footer nav ul li {
	padding:0; 
	margin: 0 20px 0 0;
	display:inline;
}

p, li, a{ 
	line-height:20px;
	color:orange;
	text-align:center;
}

/*************************/
/* rules for the section */
/*************************/

section#info {
	display:block;
	overflow:auto;
	position:relative;
	width:90%;
	height:491px;
	color:#000;
	margin-left:40px;
	border:2px solid orange;
	border-radius:10px;
	-moz-border-radius:10px;
	background:#FFF;
	padding:15px;
}

section#info li {
	margin-left:15px;
	background:inherit;
	font-size:8pt;
	line-height:15px;
	text-align:left;
	color:#000;
}

section#info a {
	color:#000;
	font-size:10pt;
}

b {
	color:#000;
	font-weight:bold;
	font-size:10pt;
}

/* ------------------------------------------- */
/* rules for the countdown container and clock */
/* ------------------------------------------- */
#countdowncontainer{
	height:80px;
	color:#000;
	background:#FFF;
}

#event {
	padding:1px;
	font-size:20pt;
	text-align:center;
	background:#FFF;
	color:#000;
}

#clock1{
	padding:1px;
	margin-top:5px;
	font-size:18pt;
	text-align:center;
	background:#FFF;
	color:#000;
}

.digits{
	font-size:28pt;
}

/* -------------------------------- */
/* rules for the tablebox and table */
/* -------------------------------- */
#schedtable {
	border-collapse:collapse;
	width:100%;
}

#schedtable caption {
	background:#FFF;
	font-size:14pt;
	font-style:italic;
}

#schedtable th {
	padding:2px;
	border-top:2px solid #F9BB3A;
	border-left:1px solid #F9BB3A;
	border-right:1px solid #F9BB3A;
	border-bottom:1px solid #F9BB3A;
	font-size:10pt;
	background-image: url('../images/greenbar.png');
	color:#F9BB3A;
}

#schedtable td {
	padding:2px;
	text-align:center;
	font-size:10pt;
	border:1px solid black;
	color:#000;
}

caption {
	color:#000;
}

/* Zebra stripe the table */
#schedtable  .list-line-even {
  background:#EEE;
}

#schedtable .list-line-odd {
  background:#AAA;
}

/* ----------------------------------- */
/* --- Rules for the abbreviations div */
/* ----------------------------------- */
#abbreviations {
	padding-top:10px;
	background:#FFF;
	margin-left:20px;
	color:#000;
}

/*
** http://www.opentip.org
** See opentip.js for the license.
** One word about the different states when showing / hiding opentips.
** An opentip starts with the .ot-completely-hidden class.
** When shown, it changes to .ot-becoming-visible, then to .ot-visible (depending
** on the length of the transition effect).
** When hidden, it changes to .ot-hidden, and then to .ot-completely-hidden (again:
** depending on the length of the transition effect).
*/

.ot-container {
	position: absolute;
	max-width: 300px;
	z-index: 100;
}

/* Only using the position transition on fixed opentips, so the tip only moves
smoothly when it changes position due to browser viewport changes. */

.ot-container.ot-fixed {
    -webkit-transition-property: left, top;
    -webkit-transition-duration: 0.2s, 0.2s;
    -moz-transition-property: left, top;
    -moz-transition-duration: 0.2s, 0.2s;
}

.ot-container.ot-completely-hidden {
/*    display: none;*/
}

.opentip {
	position: relative;
	font-size: 13px;
	line-height: 120%;
	box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
	-moz-box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
	-webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
}

.opentip .title   {
	font-weight: bold; 
}

.opentip .content {
	width: auto !important;
}

.opentip .loadingIndication {
	display: none;
	padding: 10px 15px;
	background: url("../images/loading.gif") center center no-repeat;
	width: 25px;
	height: 15px;
}

.opentip .loadingIndication span { display: none; }

.ot-loading .opentip .loadingIndication { display: block; }

.ot-loading .opentip .content { display: none; }


.ot-buttons {
	position: absolute;
	right: 0;
	top: 0;
}

.ot-buttons .close {
	display: block;
	text-decoration:none;
	width: 15px;
	height: 15px;
	background: url("../images/button.close.small.ffffff.png") center center no-repeat;
}

.ot-buttons .close span {
	display: none;
}

.ot-container .stem-container {
	position: absolute;
	width: 0;
	height: 0;
}

.ot-container .stem {
	position: absolute;
	overflow: hidden;
}

.ot-container .stem div {
	background: no-repeat url("../images/stems.cccccc.png");
	position: absolute;
	width: 320px;
	height: 160px;
}

.ot-container .left { left: 0; }
.ot-container .center { left: 50%; }
.ot-container .right { right: 0; }
.ot-container .top { top: 0; }
.ot-container .middle { top: 50%; }
.ot-container .bottom { bottom: 0; }

/** OpenTip Styles **/

.style-rounded .opentip {
	border: 4px solid orange;
	/* border: 7px solid #81b4da; */
	background-color: green;
	color: #3f5d73;
	border-radius: 10px;
	-moz-border-radius: 10px;
	-webkit-border-radius: 10px;
	box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);
	-moz-box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);
	-webkit-box-shadow: 0 0 5px rgba(0, 0, 0, 0.4);
}

.style-rounded .opentip .title {
	background: #81b4da;
	color: #f7fafd;
	padding: 0px 10px 4px 10px;
}

.style-rounded .opentip .content {
	padding: 6px 10px;
}

.style-rounded .stem div {
	background-image: url("../images/stems.fcb033.png");
}

.style-rounded .ot-buttons {
	top: -13px;
	right: -12px;
}

.style-rounded .ot-buttons .close {
	background-color: #81B4DA;
	width: 21px;
	height: 21px;
	border-radius: 10px;
	-moz-border-radius: 10px;
	-webkit-border-radius: 10px;
}

/** IE 6 HACKS **/

.ot-buttons {
	z-index: 110;
}

.opentip {
	z-index: 110;
}

.opentipIFrame {
	position: absolute;
	top: 0;
	left: 0;
	border: none;
	background: none;
	margin: 0;
	padding: 0;
	display:none;
 	/* sorry for IE5 */ display/* */:block; /* sorry for IE5 */
 	z-index:-1;    /*must have*/
 	filter:mask(); /*must have*/
}

.ot-container .stem div {
	behavior: expression((this.runtimeStyle.behavior="none")&&(this.pngSet?this.pngSet=true:(this.nodeName == "IMG" && this.src.toLowerCase().indexOf('.png')>-1?(this.runtimeStyle.backgroundImage = "none",
		this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.src + "', sizingMethod='image')",
		this.src = "transparent.gif"):(this.origBg = this.origBg? this.origBg :this.currentStyle.backgroundImage.toString().replace('url("','').replace('")',''),
		this.runtimeStyle.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + this.origBg + "', sizingMethod='crop')",
		this.runtimeStyle.backgroundImage = "none")),this.pngSet=true)
	);
}

/* CSS3 Transitions
====================
The definitions that follow here, are only meant for browsers that support css3 transitions.
So the syntax I'm going to use, is really meant for more modern browsers than IE6.
To define a show effect, you have to define the position you want to come from
as the .ot-completely-hidden property (in combination with your .ot-show-effectName).
To define a hide effect, you do the same, but for .ot-hidden (in combination with your .ot-show-effectName).*/

.ot-container.ot-css3 {
  -webkit-transition-duration: 1s; /* Well be reset by JS */
  -webkit-transition-property: opacity, -webkit-transform;
  -moz-transition-duration: 1s; /* Well be reset by JS */
  -moz-transition-property: opacity, -moz-transform;
  -o-transition-duration: 1s; /* Well be reset by JS */
  -o-transition-property: opacity, -o-transform;
  opacity: 1;
}

.ot-container.ot-css3.ot-completely-hidden {
  display: none;
}

/** Appear / Fade**/
.ot-container.ot-css3.ot-becoming-visible.ot-show-appear, .ot-container.ot-css3.ot-hidden.ot-hide-fade {
  opacity: 0;
}